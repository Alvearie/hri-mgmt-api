name: Release

on: 
  push:
    tags: [ ** ]
  workflow_dispatch:

env:
  IMAGE_NAME: mgmt-api

jobs:
  docker-build:
    name: Docker Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Determine Image Name & Tag
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository }}/$IMAGE_NAME
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          VERSION=$(echo $VERSION | sed -e 's/^v//')
          echo IMAGE_ID=$IMAGE_ID:$VERSION
          echo "IMAGE_ID=$IMAGE_ID:$VERSION" >> $GITHUB_ENV

      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_ID --label "runnumber=${GITHUB_RUN_ID}"

      - name: Linter
        uses: hands-lab/dockle-action@v1
        with:
          image: "${{ env.IMAGE_ID }}"
          exit-code: 1
          exit-level: 'WARN'

      - name: Vulnerability Scan
        uses: aquasecurity/trivy-action@0.0.20
        with:
          image-ref: "${{ env.IMAGE_ID }}"
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH,MEDIUM'

      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: docker push $IMAGE_ID
