language: go
go: 1.13.x

env:
  global:
  - TENANT_ID=
  # CLOUD_API_KEY
  - secure:
  - TOOLCHAIN_ID=
  # Don't use ELASTICSEARCH_* for variable names or it will interfere with unit tests
  - ELASTIC_URL=
  - ELASTIC_CERT_FILE=
  - ELASTIC_USER=
  - COS_URL=https://s3.us-south.cloud-object-storage.appdomain.cloud
  - IAM_CLOUD_URL=https://iam.cloud.ibm.com
  # ELASTIC_PASSWORD
  - secure:
  # FN_WEB_SECURE_KEY used as the API key for IBM Functions web actions
  - secure:
  # HRI_API_KEY currently only for the HRI_API namespace
  - secure:
  # gitApiKey
  - secure:
  - EVENTSTREAMS_BROKERS=
  # SASL_PLAIN_PASSWORD
  - secure:
  - ASOC_CLI_URL=
  - ASOC_APP_ID=
  - ASOC_KEY_ID=
  # ASOC_KEY_SECRET
  - secure:
  - OCTOKIT_API_ENDPOINT="https://github.com/api/v3"
  - REGION=
  - RESOURCE_GROUP=
  - ELASTIC_INSTANCE=
  - ELASTIC_SVC_ACCOUNT=
  - KAFKA_INSTANCE=
  - KAFKA_SVC_ACCOUNT=

stages:
  - name: Run Tests
    if: tag IS blank
  - name: App Scan
    if: branch = release-0.3 AND tag IS blank
  - name: Create Release
    if: tag IS present

jobs:
  include:
  - stage: Run Tests
    before_install:
    - openssl aes-256-cbc -K $encrypted_75283d2a415b_key -iv $encrypted_75283d2a415b_iv -in elastic-cert64.enc -out elastic-cert64 -d
    install:
    - curl -sL https://ibm.biz/idt-installer | bash
    - ibmcloud plugin install doi
    - go get -u github.com/jstemmer/go-junit-report
    before_script:
    - ibmcloud login --apikey $CLOUD_API_KEY -r us-south
    script:
    - ./run-unittests.sh
    - make bins
    - ./run-insights-publish.sh buildRecord
    - ./run-insights-publish.sh unitTest
    - ./run-insights-publish.sh evaluateCI
    - NAMESPACE="$TRAVIS_BRANCH" ./deploy.sh --skipSecureApi
    - echo y | gem update --system
    - BUNDLE_GEMFILE="./test/Gemfile" bundle install
    - ./run-dreddtests.sh
    - ./run-ivttests.sh
    - ./run-fvttests.sh
    - ./run-insights-publish.sh smokeTest
    - ./run-insights-publish.sh dreddTest
    - ./run-insights-publish.sh ivtTest
    - ./run-insights-publish.sh fvtTest
    - ./run-insights-publish.sh evaluateCD
  - stage: App Scan
    script:
    - make test
    - ./appscan.sh
  - stage: Create Release
    script:
    - make bins
    before_deploy:
    - tar cvfz mgmt-api-$TRAVIS_TAG.tgz build mgmt-api-manifest.yml deploy.sh updateApi.sh secureApi.sh run-smoketests.sh
    deploy:
      provider: releases
      api_key:
          secure:
      file:
        - ./mgmt-api-$TRAVIS_TAG.tgz
      skip_cleanup: true
      on:
        tags: true
