# (C) Copyright IBM Corp. 2020
#
# SPDX-License-Identifier: Apache-2.0

packages:
    hri_mgmt_api:
        version: 2.1.7
        actions:
            create_batch:
                function: build/batches_create-bin.zip
                runtime: go:1.17
                web-export: true
                annotations:
                    require-whisk-auth: $FN_WEB_SECURE_KEY
            get_batches:
                function: build/batches_get-bin.zip
                runtime: go:1.17
                web-export: true
                annotations:
                    require-whisk-auth: $FN_WEB_SECURE_KEY
            get_batch_by_id:
                function: build/batches_get_by_id-bin.zip
                runtime: go:1.17
                web-export: true
                annotations:
                    require-whisk-auth: $FN_WEB_SECURE_KEY
            healthcheck:
                function: build/healthcheck_get-bin.zip
                runtime: go:1.17
                web-export: true
                annotations:
                    require-whisk-auth: $FN_WEB_SECURE_KEY
            send_complete:
                function: build/batches_sendcomplete-bin.zip
                runtime: go:1.17
                web-export: true
                annotations:
                    require-whisk-auth: $FN_WEB_SECURE_KEY
            processing_complete:
                function: build/batches_processingcomplete-bin.zip
                runtime: go:1.17
                web-export: true
                annotations:
                    require-whisk-auth: $FN_WEB_SECURE_KEY
            terminate_batch:
                function: build/batches_terminate-bin.zip
                runtime: go:1.17
                web-export: true
                annotations:
                    require-whisk-auth: $FN_WEB_SECURE_KEY
            fail_batch:
                function: build/batches_fail-bin.zip
                runtime: go:1.17
                web-export: true
                annotations:
                    require-whisk-auth: $FN_WEB_SECURE_KEY
            create_tenant:
                function: build/tenants_create-bin.zip
                runtime: go:1.17
                web-export: true
                annotations:
                    require-whisk-auth: $FN_WEB_SECURE_KEY
            get_tenants:
                function: build/tenants_get-bin.zip
                runtime: go:1.17
                web-export: true
                annotations:
                    require-whisk-auth: $FN_WEB_SECURE_KEY
            get_tenant_by_id:
                function: build/tenants_get_by_id-bin.zip
                runtime: go:1.17
                web-export: true
                annotations:
                    require-whisk-auth: $FN_WEB_SECURE_KEY
            delete_tenant:
                function: build/tenants_delete-bin.zip
                runtime: go:1.17
                web-export: true
                annotations:
                    require-whisk-auth: $FN_WEB_SECURE_KEY
            get_streams:
                function: build/streams_get-bin.zip
                runtime: go:1.17
                web-export: true
                annotations:
                    require-whisk-auth: $FN_WEB_SECURE_KEY
            create_stream:
                function: build/streams_create-bin.zip
                runtime: go:1.17
                web-export: true
                annotations:
                    require-whisk-auth: $FN_WEB_SECURE_KEY
            delete_stream:
                function: build/streams_delete-bin.zip
                runtime: go:1.17
                web-export: true
                annotations:
                    require-whisk-auth: $FN_WEB_SECURE_KEY
        apis:
            hri-batches:
                hri:
                    healthcheck:
                        healthcheck:
                            method: GET
                            response: http
                    tenants:
                        get_tenants:
                            method: GET
                            response: http
                    tenants/{tenantId}:
                        create_tenant:
                            method: POST
                            response: http
                        get_tenant_by_id:
                            method: GET
                            response: http
                        delete_tenant:
                            method: DELETE
                            response: http
                    tenants/{tenantId}/batches:
                        create_batch:
                            method: POST
                            response: http
                        get_batches:
                            method: GET
                            response: http
                    tenants/{tenantId}/batches/{batchId}:
                        get_batch_by_id:
                            method: GET
                            response: http
                    tenants/{tenantId}/batches/{batchId}/action/sendComplete:
                        send_complete:
                            method: PUT
                            response: http
                    tenants/{tenantId}/batches/{batchId}/action/processingComplete:
                        processing_complete:
                            method: PUT
                            response: http
                    tenants/{tenantId}/batches/{batchId}/action/terminate:
                        terminate_batch:
                            method: PUT
                            response: http
                    tenants/{tenantId}/batches/{batchId}/action/fail:
                        fail_batch:
                            method: PUT
                            response: http
                    tenants/{tenantId}/streams:
                        get_streams:
                            method: GET
                            response: http
                    tenants/{tenantId}/streams/{streamId}:
                        create_stream:
                            method: POST
                            response: http
                        delete_stream:
                            method: DELETE
                            response: http
