#!/bin/bash
set -xe

# Get Args
printHelp() {
cat <<EOF
Usage: vulnerability-scan.sh [OPTIONS]
Options:
-n NAME, --docker-image-name NAME              Name of the docker image
-b BUILD_ID, --build-id BUILD_ID               Build id for docker image
-dbg-n NAME, --debug-docker-image-name NAME    Name of the debug docker image
-dbg-b BUILD_ID, --debug-build-id BUILD_ID     Build id for the debug docker image
EOF
}

while [[ $# -gt 0 ]]
do
  key="$1"
  case $key in
      -n|--docker-image-name)
      dockerImageName="$2"
      shift
      shift
      ;;
      -b|--build-id)
      buildId="$2"
      shift
      shift
      ;;
      -h|--help)
      printHelp
      exit 0
      ;;
      *)    # unknown option
      echo "Unknown option [$key]"
      printHelp
      exit -1
      ;;
  esac
done

echo "DOCKER_IMAGE_NAME=${dockerImageName}"
echo "BUILD_ID=${buildId}"
PIPELINE_IMAGE_URL=${dockerImageName}:${buildId}
PIPELINE_IMAGE_URL_DBG=${dbgDockerImageName}:${dbgBuildId}

image_success=1
x=0
while [[ ${x} -lt 180 ]];do
    set +e
    STATUS=$( ibmcloud cr va -e -o json ${PIPELINE_IMAGE_URL} | grep -o '"status": *"[A-Z0-9"]*"' | awk '{print $2}' | tr -d \" )
    set -e
    if echo "${STATUS}" | egrep -q "OK|WARN|UNSUPPORTED|FAIL"; then
      echo "image scan is completed with STATUS: ${STATUS}"
        if [[ "${STATUS}" == "OK" ]];then
          echo "The vulnerability scan was successful, ${STATUS}"
          image_success=0
        fi
      break
    fi
    echo -e "A vulnerability report was not found for the specified image ${PIPELINE_IMAGE_URL} \
        \nEither the image does not exist or the scan has not completed yet.\
        \nWaiting for image scan to complete.."
    x=$(( $x + 1 ))
    sleep 10
done

exit ${image_success}